- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  - const url = _.get(options, 'url');
  - const method = _.get(options, 'method', 'get').toLowerCase();
  - const isStandart = _.includes(['get', 'post'], method);
  - const confirm = _.get(options, 'confirm');
  form(action= url method= isStandart ? method : 'post' data-confirm= confirm)
    if !isStandart
      input(name='_method' type='hidden' value= method)
    block

mixin input(f, property, options = { as: 'text' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group(class=(f.errors[property] && 'has-danger'))
    label= property
    input(name=getInputName(f, property) class='form-control' type=options['as'] value=`${value}`)
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin button(f, value = 'Save', type = 'submit')
  .form-group
    input(class='btn' type=`${type}` value=`${value}`)
      
mixin buttonLink(value, options = {}type = 'submit', disabled = false)
  - const type = _.get(options, 'type') || 'submit';
  - const disabled = _.get(options, 'disabled');
  .form-group
    if disabled
      button.btn.btn-link(type= type, disabled='', value= `${value}`)
    else
      button.btn.btn-link(type= type, value= `${value}`)

mixin select(f, property, options)
  .form-group(class=(f.errors[property] && 'has-danger'))
    label= property
    select(name=getInputName(f, property) class='form-control')
      if options
        for option in options 
          option= option
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin textarea(f, property)
  .form-group(class=(f.errors[property] && 'has-danger'))
    label= property
    textarea(name=getInputName(f, property) class='form-control' rows='3')
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')
